{"version":3,"sources":["components/Square.js","components/Row.js","calculateSudoku.js","components/Board.js","components/App.js","index.js"],"names":["Square","onInputChange","event","props","term","target","value","rows","i","consoleMe","console","log","state","helperValue","board","setClass","cols","className","this","option","type","onChange","React","Component","Row","row","index","userArr","map","square","key","calculateSudoku","puzzle","date","Date","constCurrent","getTime","current","checkValue","arr","j","includes","push","checkRow","checkCol","m","n","k","check3x3square","emptyArr","getSeconds","flag","length","insertNewValue","emptyPositionsArr","saveEmptyPositions","Board","sudokuSize","message","initBoard","setState","easyBoard","mediumBoard","hardBoard","calculateFunc","result","printBoard","termFunction","newBoard","Number","onClick","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.2d3f328b.chunk.js","sourcesContent":["import React from 'react';\r\nimport ArrowKeysReact from 'arrow-keys-react';\r\nimport '../sudoku.css';\r\n\r\nclass Square extends React.Component {\r\n\r\n    // ArrowKeysReact.config({\r\n\t   //    left: () => {\r\n\t   //      console.log('left key detected.');\r\n\t   //    },\r\n\t   //    right: () => {\r\n\t   //      console.log('right key detected.');\r\n\t   //    },\r\n\t   //    up: () => {\r\n\t   //      console.log('up key detected.');\r\n\t   //    },\r\n\t   //    down: () => {\r\n\t   //      console.log('down key detected.');\r\n\t   //    }\r\n    // });\r\n\tonInputChange = event => {\r\n\t\t// let cb = () => {\r\n\t\t\t// console.log(this.state.term);\r\n\t\t// \tthis.props.userArr([this.props.rows,this.props.i], this.state.term)\r\n\t\t// }\r\n\t\t// this.setState({term: event.target.value}, cb)\r\n\t\tthis.props.term(event.target.value, this.props.rows, this.props.i);\r\n\t\t// console.log('term is: ', this.state.term);\r\n\t\t// this.props.userArr([this.props.rows,this.props.i], this.state.term);\r\n\t};\r\n\r\n\t// changeStateTerm = () => {\r\n\t// \tthis.setState({term: ''});\r\n\t// }\r\n\r\n\tconsoleMe = () => {\r\n\t\tconsole.log('term is: ', this.state.term);\r\n\t}\r\n\t// helperValue = () => (this.props.board[this.props.rows][this.props.i] === 0)  ? '' : this.props.board[this.props.rows][this.props.i];\r\n\r\n\thelperValue = () => {\r\n\t\tlet value = this.props.board[this.props.rows][this.props.i];\r\n\t\t\t if ((value >= 1) && (value <= 9))\r\n\t\t\t \treturn value;\r\n\t\t\t else\r\n\t\t\t \treturn '';\r\n\t}\r\n\tsetClass = () => {\r\n\t\tlet rows = this.props.rows;\r\n\t\tlet cols = this.props.i;\r\n\t\tif ((rows === 2 || rows === 5) && (cols === 2 || cols === 5))  {\r\n\t\t\treturn \"square row-space col-space-right\";\r\n\t\t} else if (rows === 2 || rows === 5) {\r\n\t\t\treturn \"square row-space\";\r\n\t\t} else if (cols === 2 || cols === 5) {\r\n\t\t\treturn \"square col-space-right\";\r\n\t\t} else {\r\n\t\t\treturn \"square\";\r\n\t\t}\r\n\t} \r\n\trender () {\r\n\t\t// console.log('i is: ', this.props.i);\r\n\t\t// console.log('term is: ', this.state.term);\r\n\t\t// console.log([this.props.rows,this.props.i], this.state.term)\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{\t\r\n\t\t\t\t\t<div className={this.setClass()}>\r\n        \r\n    \t\t\t\t\t\t{\r\n    \t\t\t\t\t\t\t(this.props.option === \"init\") && \r\n    \t\t\t\t\t\t\t\t<input type=\"text\"  className=\"input\"\r\n    \t\t\t\t\t\t\t\t\tvalue={this.helperValue()}  \t\t\t\t\t\t\t\t\r\n    \t\t\t\t\t\t\t\t\tonChange={this.onInputChange} />\r\n    \t\t\t\t\t\t\t\r\n    \t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t(this.props.value !== 0) && (this.props.option !== \"init\") &&\r\n\t\t\t\t\t\t\t\t<span className=\"numbers seted-board\"> {this.props.value} \r\n\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t(this.props.value === 0) && (this.props.option !== \"init\") &&\r\n\t\t\t\t\t\t\t\t<span className=\"empty-color seted-board\"></span>\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nconst Row = ({row, index, board, option, userArr, term}) => {\r\n\t// console.log('board is: ', board);\r\n\treturn (\r\n\r\n\t\t<div className=\"row\">\r\n\t\t\t{ \r\n\r\n                row.map((square, i) =>\r\n                    <Square key={i} square={square} i={i}\r\n                    rows={index} board={board} userArr={userArr}\r\n                    value={row[i]} option={option}  \r\n                    term={term}/>)\r\n            }\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Row;","\r\n\r\nconst calculateSudoku = (puzzle) => {\r\n  const date = new Date();\r\n  const constCurrent = date.getTime() + 290000;\r\n  let current = date.getTime();\r\n  // const printSudoku = (puzzle) => {\r\n  //   console.log(puzzle);\r\n  // }\r\n  const saveEmptyPositions = (puzzle) => {\r\n    let emptyPositionsArr = [];\r\n    for(let i = 0; i < 9; i++) {\r\n      for(let j = 0; j < 9; j++) {\r\n        if(!puzzle[i][j]) {\r\n          emptyPositionsArr.push([i, j]);\r\n        }\r\n      }\r\n    }\r\n    return emptyPositionsArr;\r\n  }\r\n\r\n  const checkRow = (puzzle) => {\r\n    let arr = [];\r\n    for(let i = 0; i < 9 ; i++) {\r\n      arr = [];\r\n      for(let j = 0; j < 9; j++ ) {\r\n        if((!arr.includes(puzzle[i][j])) && (puzzle[i][j] !== 0)) {\r\n          arr.push(puzzle[i][j])\r\n        } else { \r\n          if(puzzle[i][j] !== 0) {\r\n            // console.log('there is a double value in a row which is:' ,\r\n              // puzzle[i][j], i, j);\r\n            return 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // console.log('No double value in a row:)');\r\n    return 1;\r\n  }\r\n\r\n  const checkCol = (puzzle) => {\r\n    let arr;\r\n    for(let i = 0; i < 9; i++) {\r\n      arr = [];\r\n      for(let j = 0; j < 9; j++) {\r\n        if((!arr.includes(puzzle[j][i])) && (puzzle[j][i] !== 0)) {\r\n          arr.push(puzzle[j][i])\r\n        } else {\r\n          if(puzzle[j][i] !== 0) {\r\n            // console.log('there is a double value in a col which is:' ,\r\n              // puzzle[j][i], i, j);\r\n            return 0;\r\n          }          \r\n        }\r\n      }\r\n    }\r\n    // console.log('No double value in a col:)');\r\n    return 1;\r\n  }\r\n\r\n  // not working yet\r\n  const check3x3square = (puzzle) => {\r\n    let arr = [];\r\n    let m,n;\r\n    m = 0;\r\n    n = 0;\r\n    for(let k = 0; k < 9; k ++) {\r\n      arr = [];\r\n      for(let i = 0; i < 3; i++) {\r\n        for(let j = 0 ; j < 3 ; j++) {\r\n          if((!arr.includes(puzzle[i+m][j+n])) && (puzzle[i+m][j+n] !== 0)) {\r\n            arr.push(puzzle[i+m][j+n])\r\n          } else {\r\n            if(puzzle[i+m][j+n] !== 0) {\r\n              // console.log('there is a double value in a 3x3 which is:' ,\r\n                // puzzle[i+m][j+n], i, j);\r\n              return 0;\r\n            }          \r\n          }          \r\n        } // 3rd for\r\n      } // 2nd for\r\n     if(k === 1 || k === 4 || k === 7)\r\n      m = 3;\r\n     if(k === 2 || k === 5 || k === 8)\r\n      m = 6;\r\n    \r\n    if(k >= 3 && k <= 5)\r\n      n = 3;\r\n    if(k >= 6 && k <= 8)\r\n      n=6;\r\n\r\n    } // 1st for\r\n    // console.log('No double value in a 3x3 square:)');\r\n    return 1;\r\n  }\r\n\r\n  const checkValue = (puzzle) => {\r\n    return (checkRow(puzzle) && checkCol(puzzle) && check3x3square(puzzle))\r\n  }\r\n\r\n  const insertNewValue = (puzzle, emptyArr) => {\r\n    let d = new Date();\r\n    let n = d.getSeconds();\r\n    let i = 0;\r\n    let flag;\r\n    let length = emptyArr.length;\r\n    while(length > i) {\r\n      current += 1;\r\n      if(current === constCurrent) {\r\n        // console.log('No solution');\r\n        return 0;      \r\n      }\r\n\r\n      flag = false;\r\n      puzzle[emptyArr[i][0]][emptyArr[i][1]]++;\r\n\r\n      while((i < length) && (puzzle[emptyArr[i][0]][emptyArr[i][1]] <= 9) && (!flag)) {\r\n       // actions for valid value\r\n       if(checkValue(puzzle)) {\r\n        flag = true;\r\n        i++;\r\n       } else {\r\n        puzzle[emptyArr[i][0]][emptyArr[i][1]]++;\r\n       }\r\n\r\n      } // 2nd while\r\n        if(!flag) {\r\n         puzzle[emptyArr[i][0]][emptyArr[i][1]] = 0;\r\n         i--;\r\n       }\r\n      // return;\r\n    } // while\r\n  } //function\r\n\r\n  // ******************\r\n  // *** ACTIONS *****\r\n  // ******************\r\n  // printSudoku(puzzle);\r\n  // console.log('0 values: ', saveEmptyPositions(puzzle));\r\n  // console.log(checkRow(puzzle));\r\n  // console.log(checkCol(puzzle));\r\n  // console.log(check3x3square(puzzle));\r\n  if(insertNewValue(puzzle,saveEmptyPositions(puzzle)) === 0)\r\n    return 0;\r\n  // console.log(puzzle);\r\n  // console.log(forCheck());\r\n  return puzzle;\t\r\n}\r\n\r\nexport default calculateSudoku;","import React from 'react';\r\nimport '../sudoku.css';\r\nimport Row from './Row';\r\nimport calculateSudoku from '../calculateSudoku';\r\n\r\n\r\nclass Board extends React.Component {\r\n\r\n\tstate = {\r\n\t\tboard: [],\r\n\t\tuserArr: [],\r\n\t\tsudokuSize: 9,\r\n\t\toption: \"init\",\r\n\t\tmessage: \"\",\r\n\t\tflag: false\r\n\t\t// term: \"\"\r\n\r\n\t}\r\n\r\n  componentDidMount() {    \r\n  \t\tthis.initBoard();\r\n        // let stateBoard = this.initBoard();\r\n        // this.setState({\r\n        //     board: stateBoard\r\n        // })\r\n\r\n        //example\r\n    //     this.setState({board:  [\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0]\r\n\t\t  // ]})\r\n\r\n    //     this.setState({userArr:  [\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0],\r\n\t\t  //   [0,0,0,0,0,0,0,0,0]\r\n\t\t  // ]})\r\n    } \r\n\r\n\r\n\t // initBoard = () => {\r\n\t // \tthis.setState({ option: \"init\"});\r\n\t // \tconsole.log('getting inside of initBoard');\r\n  //       // this.setState({board: []});\r\n  //       let size = this.state.sudokuSize;\r\n  //       let board = [];\r\n  //       // creating 8 rows\r\n  //       for(let j = 0; j < size; j++) {\r\n  //           let row = [];\r\n  //           for(let i = 0; i < size; i++) {\r\n  //               row.push(null);\r\n  //           }\r\n  //           board.push(row);\r\n  //       }\r\n  //       this.setState({board: board}, function() {});\r\n  //       // return board;\r\n  //   }\r\n\r\n    initBoard = () => {\r\n\r\n    \tconsole.log('entering initBoard');\r\n    \tthis.setState({ option: \"init\"}, function() {});\r\n    \tthis.setState({ flag: false});\r\n    \tthis.setState( {message: \"\"});\r\n\r\n        this.setState({board:  [\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0]\r\n\t\t  ]}, function() {});\r\n\r\n        this.setState({userArr:  [\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0],\r\n\t\t    [0,0,0,0,0,0,0,0,0]\r\n\t\t  ]}, function() {});\r\n    }\r\n\r\n    easyBoard = () => {\r\n    \tthis.setState({flag: true});\r\n    \tthis.setState({ option: \"easy\"});\r\n    \tthis.setState( {message: \"\"});\r\n    \tthis.setState({ board:\r\n\t    \t[\r\n\t\t\t    [7,5,1,4,6,0,9,2,3],\r\n\t\t\t    [2,9,8,3,0,5,4,6,7],\r\n\t\t\t    [6,0,3,7,9,0,8,1,5],\r\n\t\t\t    [9,0,2,0,0,0,3,0,6],\r\n\t\t\t    [3,8,6,9,5,0,0,7,4],\r\n\t\t\t    [4,7,0,2,3,6,0,8,9],\r\n\t\t\t    [8,6,9,0,2,3,7,4,1],\r\n\t\t\t    [1,3,7,6,8,0,0,0,0],\r\n\t\t\t    [5,0,4,1,7,9,0,3,8]\r\n\t    \t]\r\n    \t})\r\n    }\r\n\r\n    mediumBoard = () => {\r\n    \tthis.setState({flag: true});\r\n    \tthis.setState({ option: \"medium\"});\r\n    \tthis.setState( {message: \"\"});\r\n    \tthis.setState({ board:\r\n      \t\t[\r\n\t\t\t    [4,8,0,2,0,0,9,0,6],\r\n\t\t\t    [7,0,0,1,0,4,0,8,0],\r\n\t\t\t    [6,2,0,0,8,7,0,1,0],\r\n\t\t\t    [2,0,0,4,0,0,0,3,7],\r\n\t\t\t    [9,0,4,8,0,3,6,2,1],\r\n\t\t\t    [1,0,0,0,0,6,8,9,4],\r\n\t\t\t    [3,0,0,6,0,2,1,0,0],\r\n\t\t\t    [0,0,6,7,0,9,0,0,2],\r\n\t\t\t    [0,4,0,0,1,0,7,0,0]\r\n  \t\t\t]\t\t\r\n    \t})\r\n    }\r\n\r\n    hardBoard = () => {\r\n    \tthis.setState({flag: true});\r\n    \tthis.setState({ option: \"hard\"});\r\n    \tthis.setState( {message: \"\"});\r\n    \tthis.setState({board:  \r\n    \t\t[\r\n\t\t\t\t[5,3,0,0,7,0,0,0,0],\r\n\t\t\t\t[6,0,0,1,9,5,0,0,0],\r\n\t\t\t\t[0,9,8,0,0,0,0,6,0],\r\n\t\t\t\t[8,0,0,0,6,0,0,0,3],\r\n\t\t\t\t[4,0,0,8,0,3,0,0,1],\r\n\t\t\t\t[7,0,0,0,2,0,0,0,6],\r\n\t\t\t\t[0,6,0,0,0,0,2,8,0],\r\n\t\t\t\t[0,0,0,4,1,9,0,0,5],\r\n\t\t\t\t[0,0,0,0,8,0,0,7,9]\r\n\t\t    ]\r\n\t\t});\r\n    }\r\n\r\n    calculateFunc =  () => {\r\n    \tconsole.log('clicked Solve');\r\n    \tlet result = calculateSudoku(this.state.board);\r\n    \tif(result) {\r\n    \t\tthis.setState({option: \"result\"});\r\n    \t\tthis.setState({board: result}, function() {});\r\n    \t}\r\n    \t\t\r\n    \telse {\r\n    \t\tthis.setState({message: \"can't solve :(\"});\r\n    \t\t// this.setState({ message: \"can't solve\"});\r\n    \t\t// console.log('test');\r\n\r\n    \t}\r\n    \t\t\r\n    }\r\n\r\n\r\n    printBoard = () => {\r\n    \tconsole.log('board is: ', this.state.board);\r\n    }\r\n\r\n    termFunction = (term, rows, i) => {\r\n    \tthis.setState({ flag: true})\r\n    \tconsole.log(term, rows, i)\r\n    \tconsole.log(this.state.board)\r\n    \tlet newBoard = this.state.board\r\n    \tnewBoard[rows][i] = Number(term)\r\n    \treturn this.setState({board:newBoard})\r\n    };\r\n\r\n\trender() {\r\n\t\t// console.log(\"initail board is: \", this.state.board);\r\n\t\treturn (\r\n\t\t\t<div className=\"container container-board\">\r\n\t\t\t\t{\r\n\t\t\t\t\t(this.state.message === \"can't solve :(\") &&\r\n\t\t\t\t\t<div className=\"row fail-message\">\r\n\t\t\t\t\t\tCan not solve this sudoku. Please insert different numbers\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-10\">\r\n\t\t\t\t\t\t<div> \r\n\t\t\t                {\r\n\t\t\t                    this.state.board.map((row, i) =>\r\n\t\t\t                    <Row key={i} row={row} \r\n\t\t\t                    index={i} board={this.state.board} \r\n\t\t\t                    option={this.state.option}\r\n\t\t\t                    userArr={this.userArr}\r\n\t\t\t                    term={this.termFunction} />)\r\n\t\t\t                }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-1\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(this.state.flag) &&\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary solve\"\r\n\t\t\t\t\t\t\t\t\tonClick={()=> this.calculateFunc()}>\r\n\t\t\t\t\t\t\t\t\tSolve\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary init\"\r\n\t\t\t\t\t\t\t\tonClick={()=> this.initBoard()}>\r\n\t\t\t\t\t\t\t\tInit\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary easy\"\r\n\t\t\t\t\t\t\t\tonClick={()=> this.easyBoard()}>\r\n\t\t\t\t\t\t\t\tEasy\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary medium\"\r\n\t\t\t\t\t\t\t\tonClick={()=> this.mediumBoard()}>\r\n\t\t\t\t\t\t\t\tMedium\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary hard\"\r\n\t\t\t\t\t\t\t\tonClick={()=> this.hardBoard()}>\r\n\t\t\t\t\t\t\t\tHard\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Board;\r\n\r\n//deleted\r\n\r\n\t\t\t\t\t\t/*<div>\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary print-board\"\r\n\t\t\t\t\t\t\t\tonClick={()=> this.printBoard()}>\r\n\t\t\t\t\t\t\t\tPrint Board\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div> */\r\n\r\n\t\t\t\t\t\t// <div>\r\n\t\t\t\t\t\t// \t<button type=\"button\" className=\"btn btn-primary submit\"\r\n\t\t\t\t\t\t// \t\tonClick={()=> this.submitBoard()}>\r\n\t\t\t\t\t\t// \t\tSubmit\r\n\t\t\t\t\t\t// \t</button>\r\n\t\t\t\t\t\t// </div>","import React from 'react';\r\nimport Board from './Board';\r\n\r\n\r\nclass App extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"container container-app\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"head\">\r\n\t\t\t\t\t\t\t<h1>Sudoku Solver</h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"instructions\">\r\n\t\t\t\t\t\t\t<p>Insert Sudoku or choose an option</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Board />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(\r\n\t<App />,\r\n\tdocument.querySelector('#root')\r\n);"],"sourceRoot":""}